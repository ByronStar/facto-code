{
  "defines": {
    "type": "define",
    "properties": {
      "events": {
        "type": "define",
        "properties": {}
      }
    }
  },
  "LuaAccumulatorControlBehavior": {
    "name": "LuaAccumulatorControlBehavior",
    "type": "LuaAccumulatorControlBehavior",
    "inherits": [
      "Inherited from LuaControlBehavior: type, entity, get_circuit_network"
    ],
    "properties": {
      "help": {
        "name": "help",
        "type": "function",
        "doc": "All methods and properties that this object supports.",
        "short": "All methods and properties that this object supports.",
        "member": "help()  → string"
      },
      "output_signal": {
        "name": "output_signal",
        "type": "SignalID",
        "mode": "[RW]",
        "member": "output_signal  :: SignalID Read/Write"
      },
      "valid": {
        "name": "valid",
        "type": "boolean",
        "mode": "[R]",
        "doc": "Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be false. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.",
        "short": "Is this object valid? [...]",
        "member": "valid  :: boolean Read"
      },
      "object_name": {
        "name": "object_name",
        "type": "string",
        "mode": "[R]",
        "doc": "The class name of this object. Available even when valid is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.",
        "short": "The class name of this object. [...]",
        "member": "object_name  :: string Read"
      }
    }
  }
}